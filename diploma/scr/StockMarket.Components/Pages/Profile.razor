@page "/profile"

@using StockMarket.Shared.ViewModels.Interfaces

@inject IAccountViewModel AccountViewModel
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<h2 class="white-text">
    <b>Profile</b>
</h2>
<hr class="white-horizontal-line"/>

<SpinLoader IsLoading="IsLoading">
    <LoadingTemplate>
        <div class="col-12" style="background-color: lightgray; height:400px; vertical-align:middle">
            <br/><br/>
            <Chase Center="true" Color="blue" Size="70px"></Chase>
        </div>
    </LoadingTemplate>
    <ContentTemplate>
        <div class="row">
            <div class="col-lg-8 col-md-6 col-sm-12">
                <input type="text" @bind-value="AccountVm.Account.FirstName" class="form-control dark-theme-textbox" placeholder="first name" disabled="@(AccountVm.Account.FirstName == null)">
                <br/>
                <input type="text" @bind-value="AccountVm.Account.LastName" class="form-control dark-theme-textbox" placeholder="last name" disabled="@(AccountVm.Account.LastName == null)">
                <br/>
                <input type="text" @bind-value="AccountVm.Account.Phone" class="form-control dark-theme-textbox" placeholder="phone" disabled="@(AccountVm.Account.Phone == null)">
                <br/>
                <button class="btn btn-primary" disabled="@(!IsUserAuthorized || AccountVm.Account.Email == null)" @onclick="UpdateProfile">Save</button>
            </div>
        </div>
        <hr class="white-horizontal-line"/>
        <div class="row">
            <div class="col-lg-8 col-md-6 col-sm-12">
                <label>Balance: @AccountVm.Money.Wallet</label>
                <br/>
                <input type="text" @bind-value="AccountVm.Money.Deposit" class="form-control dark-theme-textbox" placeholder="sum">
                <br/>
                <button class="btn btn-primary" disabled="@(!IsUserAuthorized || AccountVm.Account.Email == null)" @onclick="PayDeposit">Add money</button>
            </div>
        </div>
    </ContentTemplate>
</SpinLoader>

<ActivateMessage></ActivateMessage>

<br/>

@code {

    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationState { get; set; }
    
    [Parameter]
    public IAccountViewModel AccountVm { get; set; }

    private bool IsLoading { get; set; } = true;
    private bool IsUserAuthorized { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AccountVm = AccountViewModel;
        var authState = await AuthenticationState!;
        var user = authState.User;

        if (user.Identity is { IsAuthenticated: true })
        {
            IsUserAuthorized = true;

            try
            {
                await AccountVm.InitAsync();
                IsLoading = false;
            }
            catch (HttpRequestException ex) when (ex.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
    //_navigationManager.NavigateTo("/", true);
            }
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task UpdateProfile()
    {
        await AccountVm.UpdateAccountAsync();
        StateHasChanged();
    }
    
    private async Task PayDeposit()
    {
        await AccountVm.PutMoneyAsync();
        StateHasChanged();
    }

}